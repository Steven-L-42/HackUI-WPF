<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mi="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
    xmlns:local="clr-namespace:Project_Automait.Classes">
    <!--Button-->
    <Style
        TargetType="{x:Type local:Button}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type local:Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        Cursor="Hand"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <TextBlock
                            x:Name="textBlock"
                            Foreground="{TemplateBinding Foreground}"
                            Padding="{TemplateBinding Padding}"
                            FontSize="{TemplateBinding FontSize}"
                            Text="{TemplateBinding Text}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" />
                    </Border>
                    <!-- Trigger f端r Maus端berfahren -->
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                TargetName="textBlock"
                                Property="Foreground"
                                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoveredForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--CheckBox-->
    <Style
        TargetType="{x:Type local:CheckBox}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type local:CheckBox}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        Cursor="Hand"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <mi:MaterialIcon
                            x:Name="checkBox"
                            Visibility="Hidden"
                            Kind="Check"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Foreground="{TemplateBinding HoveredForeground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsChecked"
                                    Value="False" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter
                                    TargetName="checkBox"
                                    Property="Visibility"
                                    Value="Visible" />
                                <Setter
                                    TargetName="checkBox"
                                    Property="Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=UnCheckColor}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger
                            Property="IsChecked"
                            Value="True">
                            <Setter
                                TargetName="checkBox"
                                Property="Visibility"
                                Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--RadioButton-->
    <Style
        TargetType="{x:Type local:RadioButton}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type local:RadioButton}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        Cursor="Hand"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <TextBlock
                            x:Name="textBlock"
                            Foreground="{TemplateBinding Foreground}"
                            Padding="{TemplateBinding Padding}"
                            FontSize="{TemplateBinding FontSize}"
                            Text="{TemplateBinding Text}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" />
                    </Border>
                    <!-- Trigger f端r Maus端berfahren -->
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsChecked"
                                    Value="False" />
                                <Condition
                                    Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter
                                    TargetName="textBlock"
                                    Property="Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=UnCheckColor}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger
                            Property="IsChecked"
                            Value="True">
                            <Setter
                                TargetName="textBlock"
                                Property="Foreground"
                                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoveredForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TextBox-->
    <Style
        BasedOn="{StaticResource {x:Type TextBox}}"
        TargetType="{x:Type local:TextBox}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type local:TextBox}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter
                            x:Key="BooleanToVisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Border
                        
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <TextBlock
                                Panel.ZIndex="1"
                                IsHitTestVisible="False"
                                Visibility="{Binding IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                x:Name="textBlock"
                                Foreground="{TemplateBinding PlaceholderForeground}"
                                FontSize="{TemplateBinding FontSize}"
                                Text="{TemplateBinding Placeholder}"
                               
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Background="Transparent" />
                            <ScrollViewer
                                Margin="0"
                                Padding="0"
                                HorizontalAlignment="Stretch"
                                FontSize="{TemplateBinding FontSize}"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                x:Name="PART_ContentHost" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
